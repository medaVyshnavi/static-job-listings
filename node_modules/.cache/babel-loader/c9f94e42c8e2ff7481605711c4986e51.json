{"ast":null,"code":"var _jsxFileName = \"/Users/vyshnavi/Documents/Programming/Projects/static-job-listings/static-job-listing-master/src/components/Content/Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport classes from \"./Body.module.css\";\nimport Card from \"../Card/Card\";\nimport data from \"../../data.json\";\nimport FilterTag from \"../UI/FilterTag\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = () => {\n  _s();\n\n  const [jobListings, setJobListings] = useState([]);\n  const [filterTags, setFilterTags] = useState([]);\n  useEffect(() => {\n    setJobListings(data);\n  }, [jobListings]);\n\n  const clearFilterHandler = () => {\n    setFilterTags([]);\n  };\n\n  const filterHandler = e => {\n    if (!filterTags.includes(e.target.innerHTML)) {\n      setFilterTags(() => [...filterTags, e.target.innerHTML]);\n    } else {\n      return false;\n    }\n  };\n\n  const removeFilterHandler = itemToRemove => {\n    setFilterTags(filterTags.filter(item => item !== itemToRemove));\n  };\n\n  const filterFunc = _ref => {\n    let {\n      role,\n      level,\n      languages,\n      tools\n    } = _ref;\n    if (filterTags.length === 0) return true;\n    const tags = [role, level];\n    if (tools) tags.push(...tools);\n    if (languages) tags.push(...languages);\n    return filterTags.every(tag => tags.includes(tag));\n  };\n\n  const filteredJobs = jobListings.filter(filterFunc);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [filterTags.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.overlay,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.filterTag,\n        children: filterTags.map(tag => /*#__PURE__*/_jsxDEV(FilterTag, {\n          tag: tag,\n          removeFilterHandler: removeFilterHandler\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.clear,\n        onClick: clearFilterHandler,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), filteredJobs.map(job => /*#__PURE__*/_jsxDEV(Card, {\n      company: job.company,\n      logo: job.logo,\n      isNew: job.new,\n      isFeatured: job.featured,\n      position: job.position,\n      postedAt: job.postedAt,\n      contract: job.contract,\n      location: job.location,\n      role: job.role,\n      level: job.level,\n      languages: job.languages,\n      tools: job.tools,\n      filterHandler: filterHandler\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Body, \"So0Y+xVXYNMIGNn23NbiXwHoUjM=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/Users/vyshnavi/Documents/Programming/Projects/static-job-listings/static-job-listing-master/src/components/Content/Body.js"],"names":["React","useEffect","useState","classes","Card","data","FilterTag","Body","jobListings","setJobListings","filterTags","setFilterTags","clearFilterHandler","filterHandler","e","includes","target","innerHTML","removeFilterHandler","itemToRemove","filter","item","filterFunc","role","level","languages","tools","length","tags","push","every","tag","filteredJobs","overlay","filterTag","map","clear","job","company","logo","new","featured","position","postedAt","contract","location","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./Body.module.css\";\r\nimport Card from \"../Card/Card\";\r\nimport data from \"../../data.json\";\r\nimport FilterTag from \"../UI/FilterTag\";\r\n\r\nconst Body = () => {\r\n  const [jobListings, setJobListings] = useState([]);\r\n  const [filterTags, setFilterTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setJobListings(data);\r\n  }, [jobListings]);\r\n\r\n  const clearFilterHandler = () => {\r\n    setFilterTags([]);\r\n  };\r\n\r\n  const filterHandler = (e) => {\r\n    if (!filterTags.includes(e.target.innerHTML)) {\r\n      setFilterTags(() => [...filterTags, e.target.innerHTML]);\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const removeFilterHandler = (itemToRemove) => {\r\n    setFilterTags(filterTags.filter((item) => item !== itemToRemove));\r\n  };\r\n\r\n  const filterFunc = ({ role, level, languages, tools }) => {\r\n    if (filterTags.length === 0) return true;\r\n\r\n    const tags = [role, level];\r\n\r\n    if (tools) tags.push(...tools);\r\n    if (languages) tags.push(...languages);\r\n\r\n    return filterTags.every((tag) => tags.includes(tag));\r\n  };\r\n\r\n  const filteredJobs = jobListings.filter(filterFunc);\r\n\r\n  return (\r\n    <div>\r\n      {filterTags.length > 0 && (\r\n        <div className={classes.overlay}>\r\n          <div className={classes.filterTag}>{filterTags.map((tag) => (\r\n            <FilterTag\r\n              key={tag}\r\n              tag={tag}\r\n              removeFilterHandler={removeFilterHandler}\r\n            />\r\n          ))}</div>\r\n          <button className={classes.clear} onClick={clearFilterHandler}>\r\n            Clear\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {filteredJobs.map((job) => (\r\n        <Card\r\n          key={job.id}\r\n          company={job.company}\r\n          logo={job.logo}\r\n          isNew={job.new}\r\n          isFeatured={job.featured}\r\n          position={job.position}\r\n          postedAt={job.postedAt}\r\n          contract={job.contract}\r\n          location={job.location}\r\n          role={job.role}\r\n          level={job.level}\r\n          languages={job.languages}\r\n          tools={job.tools}\r\n          filterHandler={filterHandler}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"]},"metadata":{},"sourceType":"module"}